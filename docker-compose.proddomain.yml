services:
  listsync-domain:
    build:
      context: .
      dockerfile: Dockerfile.proddomain
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: listsync-domain
    ports:
      # Frontend (Next.js Dashboard) - point your-domain.com here
      - "3222:3222"
      # Backend API (FastAPI) - point back.your-domain.com here
      - "4222:4222"
    environment:
      # Timezone Configuration
      - TZ=${TZ:-GMT}
      
      # Domain Configuration
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN:-your-domain.com}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN:-back.your-domain.com}
      
      # Overseerr Configuration 
      - OVERSEERR_URL=${OVERSEERR_URL}
      - OVERSEERR_API_KEY=${OVERSEERR_API_KEY}
      - OVERSEERR_USER_ID=${OVERSEERR_USER_ID:-1}
      - SYNC_INTERVAL=${SYNC_INTERVAL:-24}
      - AUTOMATED_MODE=true
      - OVERSEERR_4K=${OVERSEERR_4K:-false}
      
      # List Configuration (comma-separated)
      - IMDB_LISTS=${IMDB_LISTS}
      - TRAKT_LISTS=${TRAKT_LISTS}
      - LETTERBOXD_LISTS=${LETTERBOXD_LISTS}
      - MDBLIST_LISTS=${MDBLIST_LISTS}
      - STEVENLU_LISTS=${STEVENLU_LISTS}
      - TRAKT_SPECIAL_LISTS=${TRAKT_SPECIAL_LISTS}
      - TRAKT_SPECIAL_ITEMS_LIMIT=${TRAKT_SPECIAL_ITEMS_LIMIT}      

      # Optional Discord webhook
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      
      # API URL Configuration - frontend calls backend subdomain
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://back.your-domain.com/api}
      
      # CORS configuration - allow frontend domain to access backend domain
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://your-domain.com,https://www.your-domain.com}
      
      # Production settings
      - NODE_ENV=production
      
      # Docker-specific settings
      - RUNNING_IN_DOCKER=true
      - NO_SANDBOX=1
      - DISPLAY=:99
    volumes:
      # Persist data directory
      - ./data:/usr/src/app/data
      # Mount environment file
      - ./.env:/usr/src/app/.env
      # Optional: Mount logs for debugging
      - ./logs:/var/log/supervisor
    restart: unless-stopped 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4222/api/system/health", "&&", "curl", "-f", "http://localhost:3222"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # DNS Configuration for domain resolution
    extra_hosts:
      - "${FRONTEND_DOMAIN}:127.0.0.1"
      - "${BACKEND_DOMAIN}:127.0.0.1" 
